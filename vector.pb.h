// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: vector_data.proto
// Protobuf C++ Version: 5.29.1

#ifndef vector_5fdata_2eproto_2epb_2eh
#define vector_5fdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_vector_5fdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_vector_5fdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_vector_5fdata_2eproto;
class Data;
struct DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Data final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Data) */ {
 public:
  inline Data() : Data(nullptr) {}
  ~Data() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Data* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Data));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Data(
      ::google::protobuf::internal::ConstantInitialized);

  inline Data(const Data& from) : Data(nullptr, from) {}
  inline Data(Data&& from) noexcept
      : Data(nullptr, std::move(from)) {}
  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data& operator=(Data&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Data& default_instance() {
    return *internal_default_instance();
  }
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
        &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Data& a, Data& b) { a.Swap(&b); }
  inline void Swap(Data* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Data* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Data* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Data>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Data& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Data& from) { Data::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Data* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Data"; }

 protected:
  explicit Data(::google::protobuf::Arena* arena);
  Data(::google::protobuf::Arena* arena, const Data& from);
  Data(::google::protobuf::Arena* arena, Data&& from) noexcept
      : Data(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAbscissaFieldNumber = 1,
    kOrdinateFieldNumber = 2,
  };
  // repeated float abscissa = 1;
  int abscissa_size() const;
  private:
  int _internal_abscissa_size() const;

  public:
  void clear_abscissa() ;
  float abscissa(int index) const;
  void set_abscissa(int index, float value);
  void add_abscissa(float value);
  const ::google::protobuf::RepeatedField<float>& abscissa() const;
  ::google::protobuf::RepeatedField<float>* mutable_abscissa();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_abscissa() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_abscissa();

  public:
  // repeated float ordinate = 2;
  int ordinate_size() const;
  private:
  int _internal_ordinate_size() const;

  public:
  void clear_ordinate() ;
  float ordinate(int index) const;
  void set_ordinate(int index, float value);
  void add_ordinate(float value);
  const ::google::protobuf::RepeatedField<float>& ordinate() const;
  ::google::protobuf::RepeatedField<float>* mutable_ordinate();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_ordinate() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_ordinate();

  public:
  // @@protoc_insertion_point(class_scope:Data)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Data& from_msg);
    ::google::protobuf::RepeatedField<float> abscissa_;
    ::google::protobuf::RepeatedField<float> ordinate_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vector_5fdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Data

// repeated float abscissa = 1;
inline int Data::_internal_abscissa_size() const {
  return _internal_abscissa().size();
}
inline int Data::abscissa_size() const {
  return _internal_abscissa_size();
}
inline void Data::clear_abscissa() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.abscissa_.Clear();
}
inline float Data::abscissa(int index) const {
  // @@protoc_insertion_point(field_get:Data.abscissa)
  return _internal_abscissa().Get(index);
}
inline void Data::set_abscissa(int index, float value) {
  _internal_mutable_abscissa()->Set(index, value);
  // @@protoc_insertion_point(field_set:Data.abscissa)
}
inline void Data::add_abscissa(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_abscissa()->Add(value);
  // @@protoc_insertion_point(field_add:Data.abscissa)
}
inline const ::google::protobuf::RepeatedField<float>& Data::abscissa() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Data.abscissa)
  return _internal_abscissa();
}
inline ::google::protobuf::RepeatedField<float>* Data::mutable_abscissa()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Data.abscissa)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_abscissa();
}
inline const ::google::protobuf::RepeatedField<float>&
Data::_internal_abscissa() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.abscissa_;
}
inline ::google::protobuf::RepeatedField<float>* Data::_internal_mutable_abscissa() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.abscissa_;
}

// repeated float ordinate = 2;
inline int Data::_internal_ordinate_size() const {
  return _internal_ordinate().size();
}
inline int Data::ordinate_size() const {
  return _internal_ordinate_size();
}
inline void Data::clear_ordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ordinate_.Clear();
}
inline float Data::ordinate(int index) const {
  // @@protoc_insertion_point(field_get:Data.ordinate)
  return _internal_ordinate().Get(index);
}
inline void Data::set_ordinate(int index, float value) {
  _internal_mutable_ordinate()->Set(index, value);
  // @@protoc_insertion_point(field_set:Data.ordinate)
}
inline void Data::add_ordinate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ordinate()->Add(value);
  // @@protoc_insertion_point(field_add:Data.ordinate)
}
inline const ::google::protobuf::RepeatedField<float>& Data::ordinate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Data.ordinate)
  return _internal_ordinate();
}
inline ::google::protobuf::RepeatedField<float>* Data::mutable_ordinate()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Data.ordinate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ordinate();
}
inline const ::google::protobuf::RepeatedField<float>&
Data::_internal_ordinate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ordinate_;
}
inline ::google::protobuf::RepeatedField<float>* Data::_internal_mutable_ordinate() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ordinate_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // vector_5fdata_2eproto_2epb_2eh
